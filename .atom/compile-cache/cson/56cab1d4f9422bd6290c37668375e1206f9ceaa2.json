{".source.matlab":{"if … else …end":{"prefix":"ife","body":"if ${1:condition}\n\t$2\nelse\n\t$3\nend"},"if … elseif … end":{"prefix":"ifeif","body":"if ${1:condition}\n\t${2:body}\nelseif ${3:condition}\n\t${4:body}\nelse\n\t${5:body}\nend"},"if … end":{"prefix":"if","body":"if ${1:condition}\n\t$0\nend"},"switch … case … end":{"prefix":"switch","body":"switch ${1:var}\n\tcase ${2:'${3:string}'}\n\t\t$0\nend"},"switch … case … otherwise … end":{"prefix":"switcho","body":"switch ${1:var}\n\tcase ${2:'${3:string}'}\n\t\t$4\n\totherwise\n\t\t$0\nend"},"try … catch … end":{"prefix":"try","body":"try\n\t$1\ncatch\n\t$0\nend"},"while":{"prefix":"whi","body":"while ${1:condition}\n\t${2:body}\nend"}},".source.octave":{"if … else …end":{"prefix":"ife","body":"if ${1:condition}\n\t$2\nelse\n\t$3\nendif"},"if … elseif … end":{"prefix":"ifeif","body":"if ${1:condition}\n\t${2:body}\nelseif ${3:condition}\n\t${4:body}\nelse\n\t${5:body}\nendif"},"if … end":{"prefix":"if","body":"if ${1:condition}\n\t$0\nendif"},"switch … case … end":{"prefix":"switch","body":"switch ${1:var}\n\tcase ${2:'${3:string}'}\n\t\t$0\nendswitch"},"switch … case … otherwise … end":{"prefix":"switcho","body":"switch ${1:var}\n\tcase ${2:'${3:string}'}\n\t\t$4\n\totherwise\n\t\t$0\nendswitch"},"try … catch … end":{"prefix":"try","body":"try\n\t$1\ncatch\n\t$0\nendtry"},"while":{"prefix":"whi","body":"while ${1:condition}\n\t${2:body}\nendwhile"}},".source.matlab, .source.octave":{"^":{"prefix":"^","body":"^($1) $2"},"case":{"prefix":"case","body":"case ${2:'${3:string}'}\n\t$0"},"disp sprintf":{"prefix":"dsp","body":"disp(sprintf('${1:%s}\\n', $2));"},"disp":{"prefix":"disp","body":"disp('${1:Text}');"},"dlmwrite":{"prefix":"dlmwrite","body":"dlmwrite('${1:filename}.dat', [${2:variables}], ${3:'${4:delimiter}', '${5:\\t}'});\n$0"},"else":{"prefix":"else","body":"else\n\t${1:body}"},"elseif":{"prefix":"elseif","body":"elseif ${1:condition}\n\t$0"},"error":{"prefix":"error","body":"error('${1:Description}');"},"exp":{"prefix":"e","body":"exp($1) $2"},"for … end cell strings":{"prefix":"fors","body":"for ${1:s} = transpose(${2:strings}(:)); $1 = $1{1};\n\t$0\nend"},"for … end":{"prefix":"for","body":"for ${1:i}=${2:1}${3::${4:n}}\n\t$0\nend"},"fprintf":{"prefix":"fpr","body":"fprintf(${1:fid}, ${2:%s}\\n, $3);"},"function":{"prefix":"function","body":"[ ${1:out} ] = ${2:function}( ${3:in} )\n% ${2:function}: ${4:Short description}\n%\n% ${5:Extended description}\n\nend  % ${2:function}"},"get":{"prefix":"get","body":"get(${1:gca},'${2:PropertyName}');"},"griddata":{"prefix":"griddata","body":"griddata(${1:xx}, ${2:yy}, ${3:zz}, ${4:xi}, ${5:yi}); "},"line":{"prefix":"line","body":"line(${1:xvector},${2:yvector}${3:,'Color','${4:b}','LineWidth',${5:1},'LineStyle','${6:-}'})"},"nargchk":{"prefix":"nargchk","body":"error(nargchk(${1:min}, ${2:max}, ${3:nargin}, `if [[ $TM_USE_OCTAVE -eq '0' ]]; then\n\techo -n \"'struct'\"\nfi` ));\n"},"set":{"prefix":"set","body":"set(${1:get(${2:gca},'${3:PropertyName}')},'${4:PropertyName}',${5:PropertyValue});"},"sprintf":{"prefix":"spr","body":"sprintf('${1:%s}\\n', $2);"},"title":{"prefix":"zla","body":"set(get(gca,'Title'),'String',${1:'${2}'});"},"unix":{"prefix":"uni","body":"[${1:s},${2:w}] = unix('${3:Unix commands}');"},"warning":{"prefix":"war","body":"warning(['${1:Description}']);"},"xlabel":{"prefix":"xla","body":"set(get(gca,'XLabel'),'String',${1:'${2}'});"},"xtick":{"prefix":"xti","body":"set(gca,'XTick',${1:[${2}]});"},"ylabel":{"prefix":"yla","body":"set(get(gca,'YLabel'),'String',${1:'${2}'});"},"ytick":{"prefix":"yti","body":"set(gca,'YTick',${1:[${2}]});"},"zlabel":{"prefix":"zla","body":"set(get(gca,'ZLabel'),'String',${1:'${2}'});"}}}